document.addEventListener('DOMContentLoaded', function() {
    // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á DOM
    const decryptBtn = document.getElementById('decryptBtn');
    const cipherInput = document.getElementById('cipherInput');
    const result = document.getElementById('result');
    const videoContainer = document.getElementById('videoContainer');
    const videoPlayer = document.getElementById('videoPlayer');
    
    // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™
    const correctEncrypted = "L oryh brx qd edeh nkrq vxdb";
    const correctDecrypted = "I love you na babe khon suay";
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
    createHeartBackground();
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á confetti container
    const confettiContainer = document.createElement('div');
    confettiContainer.className = 'confetti-container';
    document.body.appendChild(confettiContainer);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á success animation container
    const successAnimation = document.createElement('div');
    successAnimation.className = 'success-animation';
    document.body.appendChild(successAnimation);
    
    // ‡πÉ‡∏™‡πà‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
    typeWriterEffect();
    
    // ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™
    decryptBtn.addEventListener('click', function() {
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î
        const originalBtnText = decryptBtn.innerHTML;
        decryptBtn.innerHTML = '<div class="loading"><div></div><div></div><div></div><div></div></div>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™...';
        decryptBtn.disabled = true;
        
        // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•
        setTimeout(() => {
            const userInput = cipherInput.value.trim();
            
            // ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™
            const decrypted = caesarDecrypt(userInput, 3);
            
            // ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏≤‡∏™‡πÄ‡∏î‡∏¥‡∏°
            result.className = 'result';
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
            if (userInput.toLowerCase() === correctEncrypted.toLowerCase() || 
                decrypted.toLowerCase() === correctDecrypted.toLowerCase()) {
                
                // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
                result.textContent = "‡πÄ‡∏¢‡πâ! ‡∏ö‡∏∞‡∏ö‡∏µ‡πã‡πÄ‡∏Å‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡∏π‡∏£‡∏±‡∏Å‡∏ö‡∏∞‡∏ö‡∏µ‡πã‡∏ô‡πâ‡∏≤‡∏≤ 2 ‡∏õ‡∏µ‡πÅ‡∏¢‡∏∞‡∏≠‡∏∏‡∏≠‡∏¥‡∏∏‡∏≠‡∏∏ üíñ";
                result.classList.add('success');
                
                // ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡∏û‡∏•‡∏∏‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡∏™‡∏µ
                createConfetti();
                
                // ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
                videoContainer.classList.remove('hidden');
                setTimeout(() => {
                    videoContainer.classList.add('visible');
                    videoPlayer.play();
                }, 300);
                
            } else {
                // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏¥‡∏î
                result.textContent = "‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ô‡πâ‡∏≤~ ‡∏ö‡∏µ‡πã‡∏ó‡∏≥‡∏î‡πâ‡∏≤‡∏¢‡∏¢‡∏¢‡∏¢! üí™";
                result.classList.add('error');
                
                // ‡∏ã‡πà‡∏≠‡∏ô‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
                videoContainer.classList.remove('visible');
                videoContainer.classList.add('hidden');
                videoPlayer.pause();
            }
            
            // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥
            decryptBtn.innerHTML = originalBtnText;
            decryptBtn.disabled = false;
        }, 1200);
    });
    
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™ Caesar Cipher
    function caesarDecrypt(text, shift) {
        return text.split('').map(char => {
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
            if (/[a-zA-Z]/.test(char)) {
                // ‡∏´‡∏≤‡∏Ñ‡πà‡∏≤ ASCII
                const code = char.charCodeAt(0);
                
                // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏ê‡∏≤‡∏ô (A=65, a=97)
                const base = code >= 65 && code <= 90 ? 65 : 97;
                
                // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
                return String.fromCharCode(
                    (((code - base - shift + 26) % 26) + base)
                );
            }
            
            // ‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏±‡∏Å‡∏Ç‡∏£‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
            return char;
        }).join('');
    }
    
    // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Enter
    cipherInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            decryptBtn.click();
        }
    });
    
    // ‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    function typeWriterEffect() {
        const msgElement = document.querySelector('.message p');
        const hintElement = document.querySelector('.hint');
        
        if (msgElement && hintElement) {
            const msgText = msgElement.textContent;
            const hintText = hintElement.textContent;
            
            msgElement.textContent = '';
            hintElement.textContent = '';
            
            // ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏£‡∏Å
            typeText(msgElement, msgText, 0, 30, function() {
                // ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏£‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à ‡∏Ñ‡πà‡∏≠‡∏¢‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á
                setTimeout(() => {
                    typeText(hintElement, hintText, 0, 20);
                }, 300);
            });
        }
    }
    
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡∏•‡∏∞‡∏ï‡∏±‡∏ß
    function typeText(element, text, index, speed, callback) {
        if (index < text.length) {
            const span = document.createElement('span');
            span.className = 'animated-text';
            span.textContent = text.charAt(index);
            
            element.appendChild(span);
            
            setTimeout(() => {
                typeText(element, text, index + 1, speed, callback);
            }, speed);
        } else if (callback) {
            callback();
        }
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
    function createHeartBackground() {
        const heartsContainer = document.createElement('div');
        heartsContainer.className = 'hearts-container';
        document.body.appendChild(heartsContainer);
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á
        for (let i = 0; i < 30; i++) {
            createHeart(heartsContainer);
        }
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏¢‡∏∞
        setInterval(() => {
            createHeart(heartsContainer);
        }, 3000);
    }
    
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à
    function createHeart(container) {
        const heart = document.createElement('div');
        heart.className = 'heart';
        
        // ‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ
        const left = Math.random() * 100;
        const size = Math.random() * 15 + 10;
        const duration = Math.random() * 15 + 10;
        const delay = Math.random() * 5;
        
        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πÑ‡∏ï‡∏•‡πå
        heart.style.left = `${left}%`;
        heart.style.width = `${size}px`;
        heart.style.height = `${size}px`;
        heart.style.animationDuration = `${duration}s`;
        heart.style.animationDelay = `${delay}s`;
        heart.style.opacity = Math.random() * 0.5 + 0.3;
        
        // ‡∏™‡∏∏‡πà‡∏°‡∏™‡∏µ
        const colors = ['#ff6b95', '#ff8fb3', '#ff4c7d', '#ff91a3', '#ffb3c0'];
        const randomColor = colors[Math.floor(Math.random() * colors.length)];
        heart.style.filter = `hue-rotate(${Math.random() * 60 - 30}deg)`;
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏•‡∏á‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ó‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå
        container.appendChild(heart);
        
        // ‡∏•‡∏ö‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
        setTimeout(() => {
            heart.remove();
        }, (duration + delay) * 1000);
    }
    
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á confetti
    function createConfetti() {
        confettiContainer.style.display = 'block';
        const colors = ['#ff6b95', '#91ff9e', '#91c5ff', '#ffdb91', '#ff91c5', '#c291ff', '#91ffe6'];
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á confetti ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏≤‡∏Å
        for (let i = 0; i < 150; i++) {
            setTimeout(() => {
                const confetti = document.createElement('div');
                confetti.className = 'confetti';
                
                // ‡∏™‡∏∏‡πà‡∏°‡∏£‡∏π‡∏õ‡∏£‡πà‡∏≤‡∏á
                const shapes = ['square', 'circle', 'triangle', 'heart'];
                const shape = shapes[Math.floor(Math.random() * shapes.length)];
                
                // ‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ
                const left = Math.random() * 100;
                const size = Math.random() * 10 + 5;
                const duration = Math.random() * 3 + 2;
                const delay = Math.random() * 0.5;
                
                // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πÑ‡∏ï‡∏•‡πå
                confetti.style.left = `${left}%`;
                confetti.style.width = `${size}px`;
                confetti.style.height = `${size}px`;
                confetti.style.opacity = Math.random() * 0.6 + 0.4;
                confetti.style.background = colors[Math.floor(Math.random() * colors.length)];
                
                // ‡∏£‡∏π‡∏õ‡∏£‡πà‡∏≤‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ
                if (shape === 'circle') {
                    confetti.style.borderRadius = '50%';
                } else if (shape === 'triangle') {
                    confetti.style.width = '0';
                    confetti.style.height = '0';
                    confetti.style.borderLeft = `${size}px solid transparent`;
                    confetti.style.borderRight = `${size}px solid transparent`;
                    confetti.style.borderBottom = `${size * 1.5}px solid ${colors[Math.floor(Math.random() * colors.length)]}`;
                    confetti.style.background = 'transparent';
                } else if (shape === 'heart') {
                    confetti.style.background = 'transparent';
                    confetti.style.boxShadow = 'none';
                    confetti.style.width = `${size * 1.2}px`;
                    confetti.style.height = `${size}px`;
                    confetti.style.background = `url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="${encodeURIComponent(colors[Math.floor(Math.random() * colors.length)])}"><path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/></svg>') no-repeat center`;
                    confetti.style.backgroundSize = 'contain';
                }
                
                // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô
                confetti.style.animation = `fall ${duration}s linear forwards`;
                confetti.style.animationDelay = `${delay}s`;
                
                // ‡πÉ‡∏™‡πà transform
                const randomRotation = Math.random() * 360;
                confetti.style.transform = `rotate(${randomRotation}deg)`;
                
                // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î keyframes ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏Å‡∏•‡∏á‡∏°‡∏≤
                const keyframes = `
                    @keyframes fall {
                        from {
                            transform: translate(0, -20px) rotate(${randomRotation}deg);
                        }
                        to {
                            transform: translate(${Math.random() * 150 - 75}px, ${window.innerHeight + 100}px) rotate(${randomRotation + 360 * 3}deg);
                        }
                    }
                `;
                
                // ‡πÄ‡∏û‡∏¥‡πà‡∏° keyframes ‡∏•‡∏á‡πÉ‡∏ô stylesheet
                const styleSheet = document.createElement('style');
                styleSheet.textContent = keyframes;
                document.head.appendChild(styleSheet);
                
                // ‡πÄ‡∏û‡∏¥‡πà‡∏° confetti ‡∏•‡∏á‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ó‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå
                confettiContainer.appendChild(confetti);
                
                // ‡∏•‡∏ö confetti ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
                setTimeout(() => {
                    confetti.remove();
                    styleSheet.remove();
                }, (duration + delay) * 1000);
            }, Math.random() * 1000);
        }
        
        // ‡∏•‡∏ö‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ó‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
        setTimeout(() => {
            confettiContainer.style.display = 'none';
        }, 5000);
    }
});